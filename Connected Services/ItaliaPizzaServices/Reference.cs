//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ItaliaPizzaClient.ItaliaPizzaServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class PersonalDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ItaliaPizzaClient.ItaliaPizzaServices.AddressDTO AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ProfilePicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ItaliaPizzaClient.ItaliaPizzaServices.AddressDTO Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HireDate {
            get {
                return this.HireDateField;
            }
            set {
                if ((this.HireDateField.Equals(value) != true)) {
                    this.HireDateField = value;
                    this.RaisePropertyChanged("HireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonalID {
            get {
                return this.PersonalIDField;
            }
            set {
                if ((this.PersonalIDField.Equals(value) != true)) {
                    this.PersonalIDField = value;
                    this.RaisePropertyChanged("PersonalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProfilePic {
            get {
                return this.ProfilePicField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicField, value) != true)) {
                    this.ProfilePicField = value;
                    this.RaisePropertyChanged("ProfilePic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFC {
            get {
                return this.RFCField;
            }
            set {
                if ((object.ReferenceEquals(this.RFCField, value) != true)) {
                    this.RFCField = value;
                    this.RaisePropertyChanged("RFC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class AddressDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressName {
            get {
                return this.AddressNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressNameField, value) != true)) {
                    this.AddressNameField = value;
                    this.RaisePropertyChanged("AddressName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierDTO", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class SupplierDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategorySupplyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategorySupply {
            get {
                return this.CategorySupplyField;
            }
            set {
                if ((this.CategorySupplyField.Equals(value) != true)) {
                    this.CategorySupplyField = value;
                    this.RaisePropertyChanged("CategorySupply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplyDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class SupplyDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeasureUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplyCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SupplyPicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeletable {
            get {
                return this.IsDeletableField;
            }
            set {
                if ((this.IsDeletableField.Equals(value) != true)) {
                    this.IsDeletableField = value;
                    this.RaisePropertyChanged("IsDeletable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeasureUnit {
            get {
                return this.MeasureUnitField;
            }
            set {
                if ((this.MeasureUnitField.Equals(value) != true)) {
                    this.MeasureUnitField = value;
                    this.RaisePropertyChanged("MeasureUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplyCategoryID {
            get {
                return this.SupplyCategoryIDField;
            }
            set {
                if ((this.SupplyCategoryIDField.Equals(value) != true)) {
                    this.SupplyCategoryIDField = value;
                    this.RaisePropertyChanged("SupplyCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SupplyPic {
            get {
                return this.SupplyPicField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplyPicField, value) != true)) {
                    this.SupplyPicField = value;
                    this.RaisePropertyChanged("SupplyPic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeSupplyDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class RecipeSupplyDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeasureUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipeSupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipeSupplyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UseQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeasureUnit {
            get {
                return this.MeasureUnitField;
            }
            set {
                if ((this.MeasureUnitField.Equals(value) != true)) {
                    this.MeasureUnitField = value;
                    this.RaisePropertyChanged("MeasureUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipeID {
            get {
                return this.RecipeIDField;
            }
            set {
                if ((this.RecipeIDField.Equals(value) != true)) {
                    this.RecipeIDField = value;
                    this.RaisePropertyChanged("RecipeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipeSupplyID {
            get {
                return this.RecipeSupplyIDField;
            }
            set {
                if ((this.RecipeSupplyIDField.Equals(value) != true)) {
                    this.RecipeSupplyIDField = value;
                    this.RaisePropertyChanged("RecipeSupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipeSupplyName {
            get {
                return this.RecipeSupplyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipeSupplyNameField, value) != true)) {
                    this.RecipeSupplyNameField = value;
                    this.RaisePropertyChanged("RecipeSupplyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplyID {
            get {
                return this.SupplyIDField;
            }
            set {
                if ((this.SupplyIDField.Equals(value) != true)) {
                    this.SupplyIDField = value;
                    this.RaisePropertyChanged("SupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UseQuantity {
            get {
                return this.UseQuantityField;
            }
            set {
                if ((this.UseQuantityField.Equals(value) != true)) {
                    this.UseQuantityField = value;
                    this.RaisePropertyChanged("UseQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPreparedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrepared {
            get {
                return this.IsPreparedField;
            }
            set {
                if ((this.IsPreparedField.Equals(value) != true)) {
                    this.IsPreparedField = value;
                    this.RaisePropertyChanged("IsPrepared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class TransactionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CashRegisterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConceptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinancialFlowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CashRegisterID {
            get {
                return this.CashRegisterIDField;
            }
            set {
                if ((this.CashRegisterIDField.Equals(value) != true)) {
                    this.CashRegisterIDField = value;
                    this.RaisePropertyChanged("CashRegisterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Concept {
            get {
                return this.ConceptField;
            }
            set {
                if ((this.ConceptField.Equals(value) != true)) {
                    this.ConceptField = value;
                    this.RaisePropertyChanged("Concept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinancialFlow {
            get {
                return this.FinancialFlowField;
            }
            set {
                if ((object.ReferenceEquals(this.FinancialFlowField, value) != true)) {
                    this.FinancialFlowField = value;
                    this.RaisePropertyChanged("FinancialFlow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierOrderID {
            get {
                return this.SupplierOrderIDField;
            }
            set {
                if ((this.SupplierOrderIDField.Equals(value) != true)) {
                    this.SupplierOrderIDField = value;
                    this.RaisePropertyChanged("SupplierOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((this.TransactionIDField.Equals(value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashRegisterDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class CashRegisterDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CashRegisterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CashierAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FinalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InitialBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpeningDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CashRegisterID {
            get {
                return this.CashRegisterIDField;
            }
            set {
                if ((this.CashRegisterIDField.Equals(value) != true)) {
                    this.CashRegisterIDField = value;
                    this.RaisePropertyChanged("CashRegisterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CashierAmount {
            get {
                return this.CashierAmountField;
            }
            set {
                if ((this.CashierAmountField.Equals(value) != true)) {
                    this.CashierAmountField = value;
                    this.RaisePropertyChanged("CashierAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentBalance {
            get {
                return this.CurrentBalanceField;
            }
            set {
                if ((this.CurrentBalanceField.Equals(value) != true)) {
                    this.CurrentBalanceField = value;
                    this.RaisePropertyChanged("CurrentBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FinalBalance {
            get {
                return this.FinalBalanceField;
            }
            set {
                if ((this.FinalBalanceField.Equals(value) != true)) {
                    this.FinalBalanceField = value;
                    this.RaisePropertyChanged("FinalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InitialBalance {
            get {
                return this.InitialBalanceField;
            }
            set {
                if ((this.InitialBalanceField.Equals(value) != true)) {
                    this.InitialBalanceField = value;
                    this.RaisePropertyChanged("InitialBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpeningDate {
            get {
                return this.OpeningDateField;
            }
            set {
                if ((this.OpeningDateField.Equals(value) != true)) {
                    this.OpeningDateField = value;
                    this.RaisePropertyChanged("OpeningDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierOrderDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class SupplierOrderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategorySupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO.OrderItemDTO[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderFolioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategorySupplyID {
            get {
                return this.CategorySupplyIDField;
            }
            set {
                if ((this.CategorySupplyIDField.Equals(value) != true)) {
                    this.CategorySupplyIDField = value;
                    this.RaisePropertyChanged("CategorySupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Delivered {
            get {
                return this.DeliveredField;
            }
            set {
                if ((this.DeliveredField.Equals(value) != true)) {
                    this.DeliveredField = value;
                    this.RaisePropertyChanged("Delivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO.OrderItemDTO[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderFolio {
            get {
                return this.OrderFolioField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderFolioField, value) != true)) {
                    this.OrderFolioField = value;
                    this.RaisePropertyChanged("OrderFolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierOrderID {
            get {
                return this.SupplierOrderIDField;
            }
            set {
                if ((this.SupplierOrderIDField.Equals(value) != true)) {
                    this.SupplierOrderIDField = value;
                    this.RaisePropertyChanged("SupplierOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="SupplierOrderDTO.OrderItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
        [System.SerializableAttribute()]
        public partial class OrderItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int MeasureUnitField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal QuantityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal SubtotalField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int SupplyIDField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SupplyNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte[] SupplyPicField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal UnitPriceField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int MeasureUnit {
                get {
                    return this.MeasureUnitField;
                }
                set {
                    if ((this.MeasureUnitField.Equals(value) != true)) {
                        this.MeasureUnitField = value;
                        this.RaisePropertyChanged("MeasureUnit");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal Quantity {
                get {
                    return this.QuantityField;
                }
                set {
                    if ((this.QuantityField.Equals(value) != true)) {
                        this.QuantityField = value;
                        this.RaisePropertyChanged("Quantity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal Subtotal {
                get {
                    return this.SubtotalField;
                }
                set {
                    if ((this.SubtotalField.Equals(value) != true)) {
                        this.SubtotalField = value;
                        this.RaisePropertyChanged("Subtotal");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int SupplyID {
                get {
                    return this.SupplyIDField;
                }
                set {
                    if ((this.SupplyIDField.Equals(value) != true)) {
                        this.SupplyIDField = value;
                        this.RaisePropertyChanged("SupplyID");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SupplyName {
                get {
                    return this.SupplyNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.SupplyNameField, value) != true)) {
                        this.SupplyNameField = value;
                        this.RaisePropertyChanged("SupplyName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte[] SupplyPic {
                get {
                    return this.SupplyPicField;
                }
                set {
                    if ((object.ReferenceEquals(this.SupplyPicField, value) != true)) {
                        this.SupplyPicField = value;
                        this.RaisePropertyChanged("SupplyPic");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal UnitPrice {
                get {
                    return this.UnitPriceField;
                }
                set {
                    if ((this.UnitPriceField.Equals(value) != true)) {
                        this.UnitPriceField = value;
                        this.RaisePropertyChanged("UnitPrice");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderSummaryDTO", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OrderSummaryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ItaliaPizzaClient.ItaliaPizzaServices.OrderItemSummaryDTO[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ItaliaPizzaClient.ItaliaPizzaServices.OrderItemSummaryDTO[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderItemSummaryDTO", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OrderItemSummaryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class RecipeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreparationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreparationTime {
            get {
                return this.PreparationTimeField;
            }
            set {
                if ((this.PreparationTimeField.Equals(value) != true)) {
                    this.PreparationTimeField = value;
                    this.RaisePropertyChanged("PreparationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipeID {
            get {
                return this.RecipeIDField;
            }
            set {
                if ((this.RecipeIDField.Equals(value) != true)) {
                    this.RecipeIDField = value;
                    this.RaisePropertyChanged("RecipeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class CustomerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ItaliaPizzaClient.ItaliaPizzaServices.AddressDTO AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ItaliaPizzaClient.ItaliaPizzaServices.AddressDTO Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegDate {
            get {
                return this.RegDateField;
            }
            set {
                if ((this.RegDateField.Equals(value) != true)) {
                    this.RegDateField = value;
                    this.RaisePropertyChanged("RegDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServices.IMainManager")]
    public interface IMainManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/GetAllPersonals", ReplyAction="http://tempuri.org/IPersonalManager/GetAllPersonalsResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO[] GetAllPersonals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/GetAllPersonals", ReplyAction="http://tempuri.org/IPersonalManager/GetAllPersonalsResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO[]> GetAllPersonalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/AddPersonal", ReplyAction="http://tempuri.org/IPersonalManager/AddPersonalResponse")]
        int AddPersonal(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/AddPersonal", ReplyAction="http://tempuri.org/IPersonalManager/AddPersonalResponse")]
        System.Threading.Tasks.Task<int> AddPersonalAsync(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/UpdatePersonal", ReplyAction="http://tempuri.org/IPersonalManager/UpdatePersonalResponse")]
        bool UpdatePersonal(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/UpdatePersonal", ReplyAction="http://tempuri.org/IPersonalManager/UpdatePersonalResponse")]
        System.Threading.Tasks.Task<bool> UpdatePersonalAsync(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/DeletePersonal", ReplyAction="http://tempuri.org/IPersonalManager/DeletePersonalResponse")]
        bool DeletePersonal(int personalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/DeletePersonal", ReplyAction="http://tempuri.org/IPersonalManager/DeletePersonalResponse")]
        System.Threading.Tasks.Task<bool> DeletePersonalAsync(int personalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/ReactivatePersonal", ReplyAction="http://tempuri.org/IPersonalManager/ReactivatePersonalResponse")]
        bool ReactivatePersonal(int personalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/ReactivatePersonal", ReplyAction="http://tempuri.org/IPersonalManager/ReactivatePersonalResponse")]
        System.Threading.Tasks.Task<bool> ReactivatePersonalAsync(int personalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/IsUsernameAvailable", ReplyAction="http://tempuri.org/IPersonalManager/IsUsernameAvailableResponse")]
        bool IsUsernameAvailable(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/IsUsernameAvailable", ReplyAction="http://tempuri.org/IPersonalManager/IsUsernameAvailableResponse")]
        System.Threading.Tasks.Task<bool> IsUsernameAvailableAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/IsRfcUnique", ReplyAction="http://tempuri.org/IPersonalManager/IsRfcUniqueResponse")]
        bool IsRfcUnique(string rfc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/IsRfcUnique", ReplyAction="http://tempuri.org/IPersonalManager/IsRfcUniqueResponse")]
        System.Threading.Tasks.Task<bool> IsRfcUniqueAsync(string rfc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/IsPersonalEmailAvailable", ReplyAction="http://tempuri.org/IPersonalManager/IsPersonalEmailAvailableResponse")]
        bool IsPersonalEmailAvailable(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalManager/IsPersonalEmailAvailable", ReplyAction="http://tempuri.org/IPersonalManager/IsPersonalEmailAvailableResponse")]
        System.Threading.Tasks.Task<bool> IsPersonalEmailAvailableAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/GetAllSuppliers", ReplyAction="http://tempuri.org/ISupplierManager/GetAllSuppliersResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[] GetAllSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/GetAllSuppliers", ReplyAction="http://tempuri.org/ISupplierManager/GetAllSuppliersResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[]> GetAllSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/GetSuppliersByCategory", ReplyAction="http://tempuri.org/ISupplierManager/GetSuppliersByCategoryResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[] GetSuppliersByCategory(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/GetSuppliersByCategory", ReplyAction="http://tempuri.org/ISupplierManager/GetSuppliersByCategoryResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[]> GetSuppliersByCategoryAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/AddSupplier", ReplyAction="http://tempuri.org/ISupplierManager/AddSupplierResponse")]
        int AddSupplier(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/AddSupplier", ReplyAction="http://tempuri.org/ISupplierManager/AddSupplierResponse")]
        System.Threading.Tasks.Task<int> AddSupplierAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierManager/UpdateSupplierResponse")]
        bool UpdateSupplier(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierManager/UpdateSupplierResponse")]
        System.Threading.Tasks.Task<bool> UpdateSupplierAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierManager/DeleteSupplierResponse")]
        bool DeleteSupplier(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierManager/DeleteSupplierResponse")]
        System.Threading.Tasks.Task<bool> DeleteSupplierAsync(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/ReactivateSupplier", ReplyAction="http://tempuri.org/ISupplierManager/ReactivateSupplierResponse")]
        bool ReactivateSupplier(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/ReactivateSupplier", ReplyAction="http://tempuri.org/ISupplierManager/ReactivateSupplierResponse")]
        System.Threading.Tasks.Task<bool> ReactivateSupplierAsync(int supplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetSuppliesBySupplier", ReplyAction="http://tempuri.org/ISupplyManager/GetSuppliesBySupplierResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetSuppliesBySupplier(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetSuppliesBySupplier", ReplyAction="http://tempuri.org/ISupplyManager/GetSuppliesBySupplierResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetSuppliesBySupplierAsync(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetSuppliesAvailableByCategory", ReplyAction="http://tempuri.org/ISupplyManager/GetSuppliesAvailableByCategoryResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetSuppliesAvailableByCategory(int categoryId, System.Nullable<int> supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetSuppliesAvailableByCategory", ReplyAction="http://tempuri.org/ISupplyManager/GetSuppliesAvailableByCategoryResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetSuppliesAvailableByCategoryAsync(int categoryId, System.Nullable<int> supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetAllSupplies", ReplyAction="http://tempuri.org/ISupplyManager/GetAllSuppliesResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetAllSupplies(bool activeOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetAllSupplies", ReplyAction="http://tempuri.org/ISupplyManager/GetAllSuppliesResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetAllSuppliesAsync(bool activeOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetAllSuppliesPage", ReplyAction="http://tempuri.org/ISupplyManager/GetAllSuppliesPageResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetAllSuppliesPage(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetAllSuppliesPage", ReplyAction="http://tempuri.org/ISupplyManager/GetAllSuppliesPageResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetAllSuppliesPageAsync(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetSuppliesByRecipe", ReplyAction="http://tempuri.org/ISupplyManager/GetSuppliesByRecipeResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] GetSuppliesByRecipe(int recipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/GetSuppliesByRecipe", ReplyAction="http://tempuri.org/ISupplyManager/GetSuppliesByRecipeResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[]> GetSuppliesByRecipeAsync(int recipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/AddSupply", ReplyAction="http://tempuri.org/ISupplyManager/AddSupplyResponse")]
        int AddSupply(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/AddSupply", ReplyAction="http://tempuri.org/ISupplyManager/AddSupplyResponse")]
        System.Threading.Tasks.Task<int> AddSupplyAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/UpdateSupply", ReplyAction="http://tempuri.org/ISupplyManager/UpdateSupplyResponse")]
        bool UpdateSupply(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/UpdateSupply", ReplyAction="http://tempuri.org/ISupplyManager/UpdateSupplyResponse")]
        System.Threading.Tasks.Task<bool> UpdateSupplyAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/DeleteSupply", ReplyAction="http://tempuri.org/ISupplyManager/DeleteSupplyResponse")]
        bool DeleteSupply(int supplyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/DeleteSupply", ReplyAction="http://tempuri.org/ISupplyManager/DeleteSupplyResponse")]
        System.Threading.Tasks.Task<bool> DeleteSupplyAsync(int supplyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/ReactivateSupply", ReplyAction="http://tempuri.org/ISupplyManager/ReactivateSupplyResponse")]
        bool ReactivateSupply(int supplyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/ReactivateSupply", ReplyAction="http://tempuri.org/ISupplyManager/ReactivateSupplyResponse")]
        System.Threading.Tasks.Task<bool> ReactivateSupplyAsync(int supplyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/AssignSupplierToSupply", ReplyAction="http://tempuri.org/ISupplyManager/AssignSupplierToSupplyResponse")]
        bool AssignSupplierToSupply(int[] supplyIds, int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/AssignSupplierToSupply", ReplyAction="http://tempuri.org/ISupplyManager/AssignSupplierToSupplyResponse")]
        System.Threading.Tasks.Task<bool> AssignSupplierToSupplyAsync(int[] supplyIds, int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/UnassignSupplierFromSupply", ReplyAction="http://tempuri.org/ISupplyManager/UnassignSupplierFromSupplyResponse")]
        bool UnassignSupplierFromSupply(int[] supplyIds, int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/UnassignSupplierFromSupply", ReplyAction="http://tempuri.org/ISupplyManager/UnassignSupplierFromSupplyResponse")]
        System.Threading.Tasks.Task<bool> UnassignSupplierFromSupplyAsync(int[] supplyIds, int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/IsSupplyDeletable", ReplyAction="http://tempuri.org/ISupplyManager/IsSupplyDeletableResponse")]
        bool IsSupplyDeletable(int supplyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplyManager/IsSupplyDeletable", ReplyAction="http://tempuri.org/ISupplyManager/IsSupplyDeletableResponse")]
        System.Threading.Tasks.Task<bool> IsSupplyDeletableAsync(int supplyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/AddProduct", ReplyAction="http://tempuri.org/IProductManager/AddProductResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO AddProduct(ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO productDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/AddProduct", ReplyAction="http://tempuri.org/IProductManager/AddProductResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO> AddProductAsync(ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO productDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/GetCurrentTransactions", ReplyAction="http://tempuri.org/IFinanceManager/GetCurrentTransactionsResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.TransactionDTO[] GetCurrentTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/GetCurrentTransactions", ReplyAction="http://tempuri.org/IFinanceManager/GetCurrentTransactionsResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.TransactionDTO[]> GetCurrentTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/RegisterOrderPayment", ReplyAction="http://tempuri.org/IFinanceManager/RegisterOrderPaymentResponse")]
        bool RegisterOrderPayment(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/RegisterOrderPayment", ReplyAction="http://tempuri.org/IFinanceManager/RegisterOrderPaymentResponse")]
        System.Threading.Tasks.Task<bool> RegisterOrderPaymentAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/GetOpenCashRegisterInfo", ReplyAction="http://tempuri.org/IFinanceManager/GetOpenCashRegisterInfoResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.CashRegisterDTO GetOpenCashRegisterInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/GetOpenCashRegisterInfo", ReplyAction="http://tempuri.org/IFinanceManager/GetOpenCashRegisterInfoResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.CashRegisterDTO> GetOpenCashRegisterInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/OpenCashRegister", ReplyAction="http://tempuri.org/IFinanceManager/OpenCashRegisterResponse")]
        bool OpenCashRegister(decimal initialAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/OpenCashRegister", ReplyAction="http://tempuri.org/IFinanceManager/OpenCashRegisterResponse")]
        System.Threading.Tasks.Task<bool> OpenCashRegisterAsync(decimal initialAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/RegisterCashOut", ReplyAction="http://tempuri.org/IFinanceManager/RegisterCashOutResponse")]
        int RegisterCashOut(decimal amount, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/RegisterCashOut", ReplyAction="http://tempuri.org/IFinanceManager/RegisterCashOutResponse")]
        System.Threading.Tasks.Task<int> RegisterCashOutAsync(decimal amount, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/RegisterSupplierOrderExpense", ReplyAction="http://tempuri.org/IFinanceManager/RegisterSupplierOrderExpenseResponse")]
        int RegisterSupplierOrderExpense(int supplierOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/RegisterSupplierOrderExpense", ReplyAction="http://tempuri.org/IFinanceManager/RegisterSupplierOrderExpenseResponse")]
        System.Threading.Tasks.Task<int> RegisterSupplierOrderExpenseAsync(int supplierOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/HasOpenCashRegister", ReplyAction="http://tempuri.org/IFinanceManager/HasOpenCashRegisterResponse")]
        bool HasOpenCashRegister();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceManager/HasOpenCashRegister", ReplyAction="http://tempuri.org/IFinanceManager/HasOpenCashRegisterResponse")]
        System.Threading.Tasks.Task<bool> HasOpenCashRegisterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/GetAllSupplierOrders", ReplyAction="http://tempuri.org/ISupplierOrderManager/GetAllSupplierOrdersResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO[] GetAllSupplierOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/GetAllSupplierOrders", ReplyAction="http://tempuri.org/ISupplierOrderManager/GetAllSupplierOrdersResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO[]> GetAllSupplierOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/AddSupplierOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/AddSupplierOrderResponse")]
        int AddSupplierOrder(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/AddSupplierOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/AddSupplierOrderResponse")]
        System.Threading.Tasks.Task<int> AddSupplierOrderAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/UpdateSupplierOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/UpdateSupplierOrderResponse")]
        bool UpdateSupplierOrder(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/UpdateSupplierOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/UpdateSupplierOrderResponse")]
        System.Threading.Tasks.Task<bool> UpdateSupplierOrderAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/DeliverOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/DeliverOrderResponse")]
        bool DeliverOrder(int supplierOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/DeliverOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/DeliverOrderResponse")]
        System.Threading.Tasks.Task<bool> DeliverOrderAsync(int supplierOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/CancelSupplierOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/CancelSupplierOrderResponse")]
        bool CancelSupplierOrder(int supplierOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierOrderManager/CancelSupplierOrder", ReplyAction="http://tempuri.org/ISupplierOrderManager/CancelSupplierOrderResponse")]
        System.Threading.Tasks.Task<bool> CancelSupplierOrderAsync(int supplierOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetDeliveredOrders", ReplyAction="http://tempuri.org/IOrderManager/GetDeliveredOrdersResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.OrderSummaryDTO[] GetDeliveredOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetDeliveredOrders", ReplyAction="http://tempuri.org/IOrderManager/GetDeliveredOrdersResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.OrderSummaryDTO[]> GetDeliveredOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrderItemsByOrderID", ReplyAction="http://tempuri.org/IOrderManager/GetOrderItemsByOrderIDResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.OrderItemSummaryDTO[] GetOrderItemsByOrderID(int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrderItemsByOrderID", ReplyAction="http://tempuri.org/IOrderManager/GetOrderItemsByOrderIDResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.OrderItemSummaryDTO[]> GetOrderItemsByOrderIDAsync(int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/RegisterRecipe", ReplyAction="http://tempuri.org/IRecipeManager/RegisterRecipeResponse")]
        int RegisterRecipe(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/RegisterRecipe", ReplyAction="http://tempuri.org/IRecipeManager/RegisterRecipeResponse")]
        System.Threading.Tasks.Task<int> RegisterRecipeAsync(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/GetAllRecipes", ReplyAction="http://tempuri.org/IRecipeManager/GetAllRecipesResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[] GetAllRecipes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/GetAllRecipes", ReplyAction="http://tempuri.org/IRecipeManager/GetAllRecipesResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[]> GetAllRecipesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/GetRecipes", ReplyAction="http://tempuri.org/IRecipeManager/GetRecipesResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[] GetRecipes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/GetRecipes", ReplyAction="http://tempuri.org/IRecipeManager/GetRecipesResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[]> GetRecipesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/UpdateRecipe", ReplyAction="http://tempuri.org/IRecipeManager/UpdateRecipeResponse")]
        int UpdateRecipe(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/UpdateRecipe", ReplyAction="http://tempuri.org/IRecipeManager/UpdateRecipeResponse")]
        System.Threading.Tasks.Task<int> UpdateRecipeAsync(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/GetCustomers", ReplyAction="http://tempuri.org/ICustomerManager/GetCustomersResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/GetCustomers", ReplyAction="http://tempuri.org/ICustomerManager/GetCustomersResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/AddCustomer", ReplyAction="http://tempuri.org/ICustomerManager/AddCustomerResponse")]
        int AddCustomer(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/AddCustomer", ReplyAction="http://tempuri.org/ICustomerManager/AddCustomerResponse")]
        System.Threading.Tasks.Task<int> AddCustomerAsync(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/IsCustomerEmailAvailable", ReplyAction="http://tempuri.org/ICustomerManager/IsCustomerEmailAvailableResponse")]
        bool IsCustomerEmailAvailable(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/IsCustomerEmailAvailable", ReplyAction="http://tempuri.org/ICustomerManager/IsCustomerEmailAvailableResponse")]
        System.Threading.Tasks.Task<bool> IsCustomerEmailAvailableAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerManager/UpdateCustomerResponse")]
        bool UpdateCustomer(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerManager/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<bool> UpdateCustomerAsync(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerManager/DeleteCustomerResponse")]
        bool DeleteCustomer(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerManager/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<bool> DeleteCustomerAsync(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/ReactivateCustomer", ReplyAction="http://tempuri.org/ICustomerManager/ReactivateCustomerResponse")]
        bool ReactivateCustomer(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManager/ReactivateCustomer", ReplyAction="http://tempuri.org/ICustomerManager/ReactivateCustomerResponse")]
        System.Threading.Tasks.Task<bool> ReactivateCustomerAsync(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISesionManager/Login", ReplyAction="http://tempuri.org/ISesionManager/LoginResponse")]
        ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISesionManager/Login", ReplyAction="http://tempuri.org/ISesionManager/LoginResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISesionManager/updateActivity", ReplyAction="http://tempuri.org/ISesionManager/updateActivityResponse")]
        int updateActivity(int personalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISesionManager/updateActivity", ReplyAction="http://tempuri.org/ISesionManager/updateActivityResponse")]
        System.Threading.Tasks.Task<int> updateActivityAsync(int personalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainManager/Ping", ReplyAction="http://tempuri.org/IMainManager/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainManager/Ping", ReplyAction="http://tempuri.org/IMainManager/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainManagerChannel : ItaliaPizzaClient.ItaliaPizzaServices.IMainManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainManagerClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServices.IMainManager>, ItaliaPizzaClient.ItaliaPizzaServices.IMainManager {
        
        public MainManagerClient() {
        }
        
        public MainManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO[] GetAllPersonals() {
            return base.Channel.GetAllPersonals();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO[]> GetAllPersonalsAsync() {
            return base.Channel.GetAllPersonalsAsync();
        }
        
        public int AddPersonal(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO) {
            return base.Channel.AddPersonal(personalDTO);
        }
        
        public System.Threading.Tasks.Task<int> AddPersonalAsync(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO) {
            return base.Channel.AddPersonalAsync(personalDTO);
        }
        
        public bool UpdatePersonal(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO) {
            return base.Channel.UpdatePersonal(personalDTO);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePersonalAsync(ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO personalDTO) {
            return base.Channel.UpdatePersonalAsync(personalDTO);
        }
        
        public bool DeletePersonal(int personalID) {
            return base.Channel.DeletePersonal(personalID);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePersonalAsync(int personalID) {
            return base.Channel.DeletePersonalAsync(personalID);
        }
        
        public bool ReactivatePersonal(int personalID) {
            return base.Channel.ReactivatePersonal(personalID);
        }
        
        public System.Threading.Tasks.Task<bool> ReactivatePersonalAsync(int personalID) {
            return base.Channel.ReactivatePersonalAsync(personalID);
        }
        
        public bool IsUsernameAvailable(string username) {
            return base.Channel.IsUsernameAvailable(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsUsernameAvailableAsync(string username) {
            return base.Channel.IsUsernameAvailableAsync(username);
        }
        
        public bool IsRfcUnique(string rfc) {
            return base.Channel.IsRfcUnique(rfc);
        }
        
        public System.Threading.Tasks.Task<bool> IsRfcUniqueAsync(string rfc) {
            return base.Channel.IsRfcUniqueAsync(rfc);
        }
        
        public bool IsPersonalEmailAvailable(string email) {
            return base.Channel.IsPersonalEmailAvailable(email);
        }
        
        public System.Threading.Tasks.Task<bool> IsPersonalEmailAvailableAsync(string email) {
            return base.Channel.IsPersonalEmailAvailableAsync(email);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[] GetAllSuppliers() {
            return base.Channel.GetAllSuppliers();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[]> GetAllSuppliersAsync() {
            return base.Channel.GetAllSuppliersAsync();
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[] GetSuppliersByCategory(int categoryId) {
            return base.Channel.GetSuppliersByCategory(categoryId);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO[]> GetSuppliersByCategoryAsync(int categoryId) {
            return base.Channel.GetSuppliersByCategoryAsync(categoryId);
        }
        
        public int AddSupplier(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO) {
            return base.Channel.AddSupplier(supplierDTO);
        }
        
        public System.Threading.Tasks.Task<int> AddSupplierAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO) {
            return base.Channel.AddSupplierAsync(supplierDTO);
        }
        
        public bool UpdateSupplier(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO) {
            return base.Channel.UpdateSupplier(supplierDTO);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSupplierAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierDTO supplierDTO) {
            return base.Channel.UpdateSupplierAsync(supplierDTO);
        }
        
        public bool DeleteSupplier(int supplierID) {
            return base.Channel.DeleteSupplier(supplierID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSupplierAsync(int supplierID) {
            return base.Channel.DeleteSupplierAsync(supplierID);
        }
        
        public bool ReactivateSupplier(int supplierID) {
            return base.Channel.ReactivateSupplier(supplierID);
        }
        
        public System.Threading.Tasks.Task<bool> ReactivateSupplierAsync(int supplierID) {
            return base.Channel.ReactivateSupplierAsync(supplierID);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetSuppliesBySupplier(int supplierId) {
            return base.Channel.GetSuppliesBySupplier(supplierId);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetSuppliesBySupplierAsync(int supplierId) {
            return base.Channel.GetSuppliesBySupplierAsync(supplierId);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetSuppliesAvailableByCategory(int categoryId, System.Nullable<int> supplierId) {
            return base.Channel.GetSuppliesAvailableByCategory(categoryId, supplierId);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetSuppliesAvailableByCategoryAsync(int categoryId, System.Nullable<int> supplierId) {
            return base.Channel.GetSuppliesAvailableByCategoryAsync(categoryId, supplierId);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetAllSupplies(bool activeOnly) {
            return base.Channel.GetAllSupplies(activeOnly);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetAllSuppliesAsync(bool activeOnly) {
            return base.Channel.GetAllSuppliesAsync(activeOnly);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[] GetAllSuppliesPage(int pageNumber, int pageSize) {
            return base.Channel.GetAllSuppliesPage(pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO[]> GetAllSuppliesPageAsync(int pageNumber, int pageSize) {
            return base.Channel.GetAllSuppliesPageAsync(pageNumber, pageSize);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] GetSuppliesByRecipe(int recipeId) {
            return base.Channel.GetSuppliesByRecipe(recipeId);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[]> GetSuppliesByRecipeAsync(int recipeId) {
            return base.Channel.GetSuppliesByRecipeAsync(recipeId);
        }
        
        public int AddSupply(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO) {
            return base.Channel.AddSupply(supplyDTO);
        }
        
        public System.Threading.Tasks.Task<int> AddSupplyAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO) {
            return base.Channel.AddSupplyAsync(supplyDTO);
        }
        
        public bool UpdateSupply(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO) {
            return base.Channel.UpdateSupply(supplyDTO);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSupplyAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplyDTO supplyDTO) {
            return base.Channel.UpdateSupplyAsync(supplyDTO);
        }
        
        public bool DeleteSupply(int supplyId) {
            return base.Channel.DeleteSupply(supplyId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSupplyAsync(int supplyId) {
            return base.Channel.DeleteSupplyAsync(supplyId);
        }
        
        public bool ReactivateSupply(int supplyId) {
            return base.Channel.ReactivateSupply(supplyId);
        }
        
        public System.Threading.Tasks.Task<bool> ReactivateSupplyAsync(int supplyId) {
            return base.Channel.ReactivateSupplyAsync(supplyId);
        }
        
        public bool AssignSupplierToSupply(int[] supplyIds, int supplierId) {
            return base.Channel.AssignSupplierToSupply(supplyIds, supplierId);
        }
        
        public System.Threading.Tasks.Task<bool> AssignSupplierToSupplyAsync(int[] supplyIds, int supplierId) {
            return base.Channel.AssignSupplierToSupplyAsync(supplyIds, supplierId);
        }
        
        public bool UnassignSupplierFromSupply(int[] supplyIds, int supplierId) {
            return base.Channel.UnassignSupplierFromSupply(supplyIds, supplierId);
        }
        
        public System.Threading.Tasks.Task<bool> UnassignSupplierFromSupplyAsync(int[] supplyIds, int supplierId) {
            return base.Channel.UnassignSupplierFromSupplyAsync(supplyIds, supplierId);
        }
        
        public bool IsSupplyDeletable(int supplyId) {
            return base.Channel.IsSupplyDeletable(supplyId);
        }
        
        public System.Threading.Tasks.Task<bool> IsSupplyDeletableAsync(int supplyId) {
            return base.Channel.IsSupplyDeletableAsync(supplyId);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO AddProduct(ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO productDTO) {
            return base.Channel.AddProduct(productDTO);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO> AddProductAsync(ItaliaPizzaClient.ItaliaPizzaServices.ProductDTO productDTO) {
            return base.Channel.AddProductAsync(productDTO);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.TransactionDTO[] GetCurrentTransactions() {
            return base.Channel.GetCurrentTransactions();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.TransactionDTO[]> GetCurrentTransactionsAsync() {
            return base.Channel.GetCurrentTransactionsAsync();
        }
        
        public bool RegisterOrderPayment(int orderId) {
            return base.Channel.RegisterOrderPayment(orderId);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterOrderPaymentAsync(int orderId) {
            return base.Channel.RegisterOrderPaymentAsync(orderId);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.CashRegisterDTO GetOpenCashRegisterInfo() {
            return base.Channel.GetOpenCashRegisterInfo();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.CashRegisterDTO> GetOpenCashRegisterInfoAsync() {
            return base.Channel.GetOpenCashRegisterInfoAsync();
        }
        
        public bool OpenCashRegister(decimal initialAmount) {
            return base.Channel.OpenCashRegister(initialAmount);
        }
        
        public System.Threading.Tasks.Task<bool> OpenCashRegisterAsync(decimal initialAmount) {
            return base.Channel.OpenCashRegisterAsync(initialAmount);
        }
        
        public int RegisterCashOut(decimal amount, string description) {
            return base.Channel.RegisterCashOut(amount, description);
        }
        
        public System.Threading.Tasks.Task<int> RegisterCashOutAsync(decimal amount, string description) {
            return base.Channel.RegisterCashOutAsync(amount, description);
        }
        
        public int RegisterSupplierOrderExpense(int supplierOrderID) {
            return base.Channel.RegisterSupplierOrderExpense(supplierOrderID);
        }
        
        public System.Threading.Tasks.Task<int> RegisterSupplierOrderExpenseAsync(int supplierOrderID) {
            return base.Channel.RegisterSupplierOrderExpenseAsync(supplierOrderID);
        }
        
        public bool HasOpenCashRegister() {
            return base.Channel.HasOpenCashRegister();
        }
        
        public System.Threading.Tasks.Task<bool> HasOpenCashRegisterAsync() {
            return base.Channel.HasOpenCashRegisterAsync();
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO[] GetAllSupplierOrders() {
            return base.Channel.GetAllSupplierOrders();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO[]> GetAllSupplierOrdersAsync() {
            return base.Channel.GetAllSupplierOrdersAsync();
        }
        
        public int AddSupplierOrder(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO) {
            return base.Channel.AddSupplierOrder(orderDTO);
        }
        
        public System.Threading.Tasks.Task<int> AddSupplierOrderAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO) {
            return base.Channel.AddSupplierOrderAsync(orderDTO);
        }
        
        public bool UpdateSupplierOrder(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO) {
            return base.Channel.UpdateSupplierOrder(orderDTO);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSupplierOrderAsync(ItaliaPizzaClient.ItaliaPizzaServices.SupplierOrderDTO orderDTO) {
            return base.Channel.UpdateSupplierOrderAsync(orderDTO);
        }
        
        public bool DeliverOrder(int supplierOrderID) {
            return base.Channel.DeliverOrder(supplierOrderID);
        }
        
        public System.Threading.Tasks.Task<bool> DeliverOrderAsync(int supplierOrderID) {
            return base.Channel.DeliverOrderAsync(supplierOrderID);
        }
        
        public bool CancelSupplierOrder(int supplierOrderID) {
            return base.Channel.CancelSupplierOrder(supplierOrderID);
        }
        
        public System.Threading.Tasks.Task<bool> CancelSupplierOrderAsync(int supplierOrderID) {
            return base.Channel.CancelSupplierOrderAsync(supplierOrderID);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.OrderSummaryDTO[] GetDeliveredOrders() {
            return base.Channel.GetDeliveredOrders();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.OrderSummaryDTO[]> GetDeliveredOrdersAsync() {
            return base.Channel.GetDeliveredOrdersAsync();
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.OrderItemSummaryDTO[] GetOrderItemsByOrderID(int orderID) {
            return base.Channel.GetOrderItemsByOrderID(orderID);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.OrderItemSummaryDTO[]> GetOrderItemsByOrderIDAsync(int orderID) {
            return base.Channel.GetOrderItemsByOrderIDAsync(orderID);
        }
        
        public int RegisterRecipe(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies) {
            return base.Channel.RegisterRecipe(recipeDTO, supplies);
        }
        
        public System.Threading.Tasks.Task<int> RegisterRecipeAsync(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies) {
            return base.Channel.RegisterRecipeAsync(recipeDTO, supplies);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[] GetAllRecipes() {
            return base.Channel.GetAllRecipes();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[]> GetAllRecipesAsync() {
            return base.Channel.GetAllRecipesAsync();
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[] GetRecipes() {
            return base.Channel.GetRecipes();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO[]> GetRecipesAsync() {
            return base.Channel.GetRecipesAsync();
        }
        
        public int UpdateRecipe(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies) {
            return base.Channel.UpdateRecipe(recipeDTO, supplies);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRecipeAsync(ItaliaPizzaClient.ItaliaPizzaServices.RecipeDTO recipeDTO, ItaliaPizzaClient.ItaliaPizzaServices.RecipeSupplyDTO[] supplies) {
            return base.Channel.UpdateRecipeAsync(recipeDTO, supplies);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public int AddCustomer(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO) {
            return base.Channel.AddCustomer(customerDTO);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerAsync(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO) {
            return base.Channel.AddCustomerAsync(customerDTO);
        }
        
        public bool IsCustomerEmailAvailable(string email) {
            return base.Channel.IsCustomerEmailAvailable(email);
        }
        
        public System.Threading.Tasks.Task<bool> IsCustomerEmailAvailableAsync(string email) {
            return base.Channel.IsCustomerEmailAvailableAsync(email);
        }
        
        public bool UpdateCustomer(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO) {
            return base.Channel.UpdateCustomer(customerDTO);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCustomerAsync(ItaliaPizzaClient.ItaliaPizzaServices.CustomerDTO customerDTO) {
            return base.Channel.UpdateCustomerAsync(customerDTO);
        }
        
        public bool DeleteCustomer(int customerID) {
            return base.Channel.DeleteCustomer(customerID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCustomerAsync(int customerID) {
            return base.Channel.DeleteCustomerAsync(customerID);
        }
        
        public bool ReactivateCustomer(int customerID) {
            return base.Channel.ReactivateCustomer(customerID);
        }
        
        public System.Threading.Tasks.Task<bool> ReactivateCustomerAsync(int customerID) {
            return base.Channel.ReactivateCustomerAsync(customerID);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServices.PersonalDTO> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public int updateActivity(int personalID) {
            return base.Channel.updateActivity(personalID);
        }
        
        public System.Threading.Tasks.Task<int> updateActivityAsync(int personalID) {
            return base.Channel.updateActivityAsync(personalID);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
